// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyHub.Storage.DbContexts;

#nullable disable

namespace StudyHubDb.Migrations
{
    [DbContext(typeof(StudyHubDbContext))]
    [Migration("20240128164704_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("StudyHub.Storage.Entities.AnswerRecord", b =>
                {
                    b.Property<int>("AnswerRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSubmission")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTimeout")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SubmissionTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeTakenSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalAnswer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalIncorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalTopic")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnswerRecordId");

                    b.ToTable("AnswerRecords");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.AnswerRecordItem", b =>
                {
                    b.Property<int>("AnswerRecordItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnswerRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnswerText")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TopicId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TopicText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicType")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnswerRecordItemId");

                    b.HasIndex("AnswerRecordId");

                    b.HasIndex("TopicId");

                    b.ToTable("AnswerRecordItems");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TopicBankFlag")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TopicSubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TopicText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicType")
                        .HasColumnType("INTEGER");

                    b.HasKey("TopicId");

                    b.HasIndex("TopicSubjectId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.TopicOption", b =>
                {
                    b.Property<int>("TopicOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue('A');

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TopicOptionId");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicOptions");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.TopicSubject", b =>
                {
                    b.Property<int>("TopicSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TopicSubjectId");

                    b.ToTable("TopicSubjects");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.AnswerRecordItem", b =>
                {
                    b.HasOne("StudyHub.Storage.Entities.AnswerRecord", "AnswerRecord")
                        .WithMany("AnswerRecordItems")
                        .HasForeignKey("AnswerRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyHub.Storage.Entities.Topic", "Topic")
                        .WithMany("AnswerRecordItems")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AnswerRecord");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.Topic", b =>
                {
                    b.HasOne("StudyHub.Storage.Entities.TopicSubject", "TopicSubject")
                        .WithMany("Topics")
                        .HasForeignKey("TopicSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TopicSubject");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.TopicOption", b =>
                {
                    b.HasOne("StudyHub.Storage.Entities.Topic", "Topic")
                        .WithMany("TopicOptions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.AnswerRecord", b =>
                {
                    b.Navigation("AnswerRecordItems");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.Topic", b =>
                {
                    b.Navigation("AnswerRecordItems");

                    b.Navigation("TopicOptions");
                });

            modelBuilder.Entity("StudyHub.Storage.Entities.TopicSubject", b =>
                {
                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
